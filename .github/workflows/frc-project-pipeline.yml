name: Frc Project Pipeline
on: 
 push: 
    branches:
        - main
jobs:
  compileAndbuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Compile 
        run: mvn compile 
      - name: Install dependencies and Build 
        run: mvn clean install
  test:  
    needs: compileAndbuild
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Test 
        run: mvn test  
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
        jar-file: ${{ steps.publish-jar.outputs.jar-file }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Package
        run: mvn clean package -DskipTests  
      - name:  Publish jar filename
        id:    publish-jar
        run : find target/*.jar -type f -execdir echo 'jar-file={}' >> $GITHUB_OUTPUT ';'
      - name:  Upload artifacts
        uses: actions/upload-artifact@v4
        with:
            name: artifacts
            path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name:  Get build artifacts
        uses: actions/download-artifact@v4
        with:
         name: artifacts
      - name: Output contents
        run: ls   
      - name:  Output filename
        run: echo "${{ needs.build.outputs.jar-file }}"  
      - name: Deploy
        run: echo "Deployee"        

        