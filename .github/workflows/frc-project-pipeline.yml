name: Frc Project Pipeline
on: 
 push: 
    branches:
        - main
env: 
  SPRING_DATASOURCE_HOST_NAME: localhost   
  SPRING_DATASOURCE_PORT: 27017
  SPRING_DATASOURCE_DATABASE_NAME: ${{ secrets.DATASOURCE_DATABASE_NAME }}   
  JAVA_HOME: /opt/jdk
jobs:
  compileAndbuild:
    environment: testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4 
        with: 
         path: ~/.m2/repository  
         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
         restore-keys: |
              ${{ runner.os }}-maven-      
      - name: Compile 
        run: mvn compile 
      - name: Install dependencies and Build 
        if: steps.cache.outputs.cache-hit != 'true'
        run: mvn clean install -DskipTests 
      - name:  Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
         JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'          
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
  test:  
    needs: compileAndbuild
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven 
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Cache dependencies
        uses: actions/cache@v4 
        with: 
         path: ~/.m2/repository  
         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
         restore-keys: |
              ${{ runner.os }}-maven-          
      - name: Test 
        continue-on-error: true
        id: run-tests
        run: mvn clean test -fn surefire-report:report  -Daggregate=true
      - name: Upload test report 
        if: failure() && ${{ steps.run-tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with: 
         name: test-report
         path:  target/surefire-reports/*.xml  
  build:
    needs: test
    runs-on: ubuntu-latest
    container: 
      image: maven:3.8.3-openjdk-17
      # env:
    outputs:
        jar-file: ${{ steps.publish-jar.outputs.jar-file }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Install Java and Maven
        uses: actions/setup-java@v4  
        with:
         java-version: '17'
         distribution: 'adopt'
      - name: Cache dependencies
        uses: actions/cache@v4 
        with: 
         path: ~/.m2/repository  
         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
         restore-keys: |
              ${{ runner.os }}-maven-          
      - name: Package
        run: mvn clean package -DskipTests  
      - name: Output contents 
        run: |
          cd target
          ls        
      - name:  Publish jar filename
        id:    publish-jar
        run : find target/*.jar -type f -execdir echo 'jar-file={}' >> $GITHUB_OUTPUT ';'
      - name:  Upload artifacts
        uses: actions/upload-artifact@v4
        with:
            name: artifacts
            path: target/*.jar
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml   
    with: 
      artifacts-name: artifacts 
    secrets: 
       database-name: ${{ secrets.DATASOURCE_DATABASE_NAME }}   
  report:
    runs-on: ubuntu-latest
    needs: [test,build]
    if: failure()
    steps: 
       - name: Output Information
         run: |
           echo "Something went wrong"
           echo "${{ github }}"   
  print-deploy-result:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Print deploy reuse output
        run: echo "${{ needs.deploy.outputs.result }}"

        